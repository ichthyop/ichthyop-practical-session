# Getting started

## Install Java

Ichthyop is a Java program. Therefore, Java is required.

-   Download the most recent version of Java here: <https://www.oracle.com/java/technologies/downloads/>

-   Install Java

-   Open a `Terminal` or a `Cmd` prompt and type:

```
java -version
```

::: callout-warning
**Java \> 11 is required!**
:::

## Install NetCDF {.smaller}

Ichthyop also need the NetCDF-C library to run.

**Linux**

Open a Terminal and type:

```
sudo apt install netcdf4
```

**Mac Os X**

Open a Terminal and type:

```
sudo port install netcdf4
```

**Windows**

Download the pre-built libraries in [Unidata website](https://docs.unidata.ucar.edu/netcdf-c/current/winbin.html)

::: callout-warning
During the install process, make sure that the location of the library is added to the `PATH`
:::

## Download Ichthyop

-   Create a `ichthyop` folder
-   Go to <https://github.com/ichthyop/ichthyop/releases/latest>
-   Download the `ichthyop-X.Y.Z-jar-with-dependencies.jar` binary file.

## Download hydrographic files

- Download the hydrographic on the Ichthyop Zenodo Community: <https://zenodo.org/records/10890690>
- Unzip the archive file

## Running Ichthyop

**Windows**

-   Double-click on the `ichthyop-X.Y.Z-jar-with-dependencies.jar` file.

**Linux/Mac Os X**

-   On the Terminal, navigate to the location of the `ichthyop-X.Y.Z-jar-with-dependencies.jar` file using `cd`
-   Type `java -jar ichthyop-X.Y.Z-jar-with-dependencies.jar &`

# First simulation

## Creation new configuration

-   Create a new configuration file by clicking on the `New` button (@fig-new)

![New configuration](https://raw.githubusercontent.com/ichthyop/ichthyop/master/doc/console/_static/step1-configure.png){#fig-new fig-align="center" height="200px"}

## Choosing template

-   Select the `ROMS 3D` template and click on `Create` (@fig-template)

![Choosing template](https://raw.githubusercontent.com/ichthyop/ichthyop/master/doc/console/_static/new.png){#fig-template fig-align="center" height="400px"}

## Running the simulation

-   Run the simulation by clicking on the `Run simulation` button (@fig-run)

![Running simulation](https://raw.githubusercontent.com/ichthyop/ichthyop/master/doc/console/_static/step2-simulate.png){#fig-run fig-align="center" height="200px"}

## Visualization

-   Visualise the results by clicking on the `Make maps` button (@fig-map)

![Mapping outputs](https://raw.githubusercontent.com/ichthyop/ichthyop/master/doc/console/_static/step3-mapping.png){#fig-map fig-align="center" height="450"}

## Expected results

You should see larval dispersal off Cape Town in South Africa (@fig-conf1).

![Outputs of the first simulation (advection)](img/conf1.png){#fig-conf1 fig-align="center" height="500"}

# New simulations

## Exploring configuration file

-   Explore the different processes and parameters contained in the configuration file and their default values (@fig-edit)

![Exploring configuration file](https://raw.githubusercontent.com/ichthyop/ichthyop/master/doc/console/_static/edit.png){#fig-edit fig-align="center" height="500"}

## Deactivating advection

-   In the configuration file, go to:

```{mermaid}
   flowchart LR
   id1(Advanced)
   id2(Transport)
   id3(Advection)
   id1 --> id2
   id2 --> id3
```

-   Disable advection by clicking on the `Enabled` tick box

-   Save the configuration file by clicking the `Save` button.

::: {.callout-warning}
**Remember to save it after every change**
:::

- Run the simulation
- Draw map
- **What happens?**

## Playing with advection/diffusion

- Repeat the operations above by activating only diffusion
- Repeat the operations above by activating both advection/diffusion

::: {#fig-elephants layout-ncol=3}

![No advection/No diffusion](img/conf2.png){#fig-noadv_nodif width=100px}

![No advection/Diffusion](img/conf3.png){#fig-noadv_dif width=100px}

![Advection/Diffusion](img/conf4.png){#fig-adv_dif width=100px}

Results of the different Ichthyop configurations

:::

## Vertical migration

- In the `Mapping` section,  choose to represent the `depth`
variable, with values -50, -30 and -10 m for min., med. and max., respectively.
- Click on `Make maps`

- In the configuration file, go to:
```{mermaid}
flowchart LR
id1(Advanced)
id2(Transport)
id3(Vertical migration)
id1 --> id2
id2 --> id3
```

- Read the
explanations at
the top of the block. Click on `Enabled` and look at the default values of the parameters.

## Vertical migration

- Run the simulation with larval vertical migration. Note that the depth of larvae is now changing
according to the vertical scheme specified, but that this movement has almost no effect on the
overall larval distribution (@fig-mig2).

- Change the vertical migration scheme such that larvae stay at -50 m depth day and night. Note that
there is now a (small) effect (@fig-mig3)

- Go back to the initial situation by unselecting vertical migration

::: {#fig-migration layout-ncol=3}

![](img/vert2.png){#fig-mig1 width=100px}

![](img/vert3.png){#fig-mig2 width=100px}

![](img/vert4.png){#fig-mig3 width=100px}

Different migration configurations. (a) No migration (b) Migration between -10 and -30 m (c) Constant depth (-50 m)
:::

## Growth

- Go to:

```{mermaid}
flowchart LR
id1(Advanced)
id2(Biology)
id3(Growth)
id1 --> id2
id2 --> id3
```

- Read the explanations at the top of the block and activate growth
- Run the simulation and visualise the `length` variable using `Auto range` for the values and colours
- Go to:

```{mermaid}
flowchart LR
id1(Advanced)
id2(Biology)
id3(Early-life stages)
id1 --> id2
id2 --> id3
```

- Read the explanations at the top of the block.
- Visualise the `stage` variable using `Auto range` for the values and colours.

## Initial positions in a text file

Unselect vertical migration and growth. Go to

```{mermaid}
    graph LR;
    id1(Advanced)
    id2(Release)
    id3(Drifters from text file)
    id1 --> id2
    id2 --> id3
```

Select, click on the `Edit` button inside the `Value` field and create the file proposed by
default (`benguela_drifters.txt`); it contains the initial positions of all individuals. Run the
simulation and observe the individuals locations.

Open the `plot_traj_Ichthyop_v3_TP` function in the R software. Try to understand the code.

Go to:
```{mermaid}
    graph LR;
    id1(Main)
    id2(Time and Main)
    id3(Output)
    id1 --> id2
    id2 --> id3
```

in Ichthyop to understand why the value of lasttime is
61 in the R function. Adjust the path to the last file (ncdf format, `.nc`) created by Ichthyop in
the `ichthyop-3.2b\output` directory of your computer. Install the R packages ncdf and maps if
necessary, then execute the function (@fig-drift). Make the necessary changes in the R function
to plot only the last positions of individuals and check that they are the same as those plotted
in the graphic interface of Ichthyop.

![Trajectories simulated in Ichthyop and plotted in R](img/driftfile.png){#fig-drift width=200px}

## Release zones

In Ichthyop, unselect

```{mermaid}
    graph LR;
    id1(Advanced)
    id2(Release)
    id3(Drifters from text file)
    id1 --> id2
    id2 --> id3
```

and select:

```{mermaid}
    graph LR;
    id1(Advanced)
    id2(Release)
    id3(From zones)
    id1 --> id2
    id2 --> id3
```

Edit the default file (`benguela_zones.xml`); it contains the release zones
(`Release`) and the destination zones (`Recruitment`). These zones are defined by the
geographic coordinates of a polygon, two isobaths (`Bathymetric mask`) and upper and lower
depth (`Thickness`). Run the simulation (check with `Preview` that the release zone appears)
and visualise larval depth. Do it again after changing the values of isobaths first to 500 and
1000 m instead of 200 and 500 m, then with 1000 and 2000 m (@fig-relzone).

::: {#fig-relzone layout-ncol=3}

![](img/release1.png){#fig-rel1 width=120px}

![](img/release2.png){#fig-rel2 width=120px}

![](img/release3.png){#fig-rel3 width=120px}

Final distribution of larvae and their depth (from red -15 m to white -7.5 m to green 0 m) for a release
zone (purple polygon) located between the isobaths (a) 200–500 m (b) 500–1000 m (c) 1000–2000 m.

:::

## Destination zones

Define now 3 different release zones, each corresponding to one of the 3 seen before (click on
to add a new zone). Select Advanced - Biology - Recruitment - In zones. Edit the zone file
and look at the parameters defining recruitment and at the recruitment zone. What is the
distinction between a release zone and a recruitment zone? Check with `Preview` that the 3
release zones and the destination zone appear.

In Main - Time, add two new release dates for days 8 and 13 (same year, month and hour) by
clicking on `Add value`. In Main - Output, change the directory in which the simulation
results are stored to `output\TP1`. Save, run the simulation, this time there are 3 simulations,
one for each release date.

Open the compute_recruitment_Ichthyop_v3_TP function in the R software. Adjust the path
to the TP1 directory, install the XML package if necessary, then execute the function (@fig-recr1). Go back to Ichthyop and visualise the trajectories of individuals for the first release date
(@fig-recr2). Note that in the end there is no individual inside the destination area! Look again
at the parameters used for recruitment to understand why the percentage of individuals
transported from the release zones to the destination zone, as computed with the R function, is
not zero.

::: {#fig-reczone layout-ncol=2}

![](img/recr1.png){#fig-recr1 width=230px}

![](img/recr2.png){#fig-recr2 width=120px}

Mean (and standard error of the mean) transport success from 3 release zones to a destination zone, for 3 release dates. The zones are shown in (b) with the final distribution of individuals for the first release date.

:::

Add now 2 new destination zones defined by isobaths 200–300 m and 300–500 m
respectively. To avoid that individuals recruit in several zones, change `Stop moving when
recruited` to True. In Main - Output, change the directory in which the simulation results are
stored to `output\TP2`. Save, run the simulation.

Open the compute_connectivity_Ichthyop_v3_TP function in the R software. Adjust the path
to the TP2 directory, install the fields and spam packages if necessary, then execute the
function (@fig-recr3). Go back to Ichthyop and visualise the trajectories of individuals for the
first release date (@fig-recr4). Note that the final positions of individuals in the north are very
different in @fig-recr2 and (@fig-recr4). Why?

::: {#fig-reczone-bis layout-ncol=2}

![](img/recr3.png){#fig-recr3 width=230px}

![](img/recr4.png){#fig-recr4 width=120px}

Mean transport success (a) from 3 release zones to 3 destination zones, for 3 release dates. The zones are shown in (b) with the final distribution of individuals for the first release date.

:::

## Dispersal distances

In TP2, delete the folder containing the simulation maps of the previous simulation, leaving
only the 3 .nc files (that correspond to the 3 release dates). In the R software, open the
compute_distances_Ichthyop_v3_TP function and adjust the path to the TP2 directory. Install
the sp package if necessary and then execute the function (@fig-disdis). Do the same for TP1
(change the values of xlim and ylim in the hist function of R if necessary).

![Histograms of dispersal distances for the 3 files (corresponding here to 3 release dates).](img/disdis.png){#fig-disdis width=300px}

## Backtracking

From the final positions of the simulated drifters trajectories (`Initial positions in a text file`
section above), we're going to backtrack (i.e., track backwards in time) each drifter to its
initial location.

In Main - Advanced - Release, choose the `restart mode`. Read the explanation of the block
and choose the NetCDF file that corresponds to the output of the drifters simulation
performed before. If you forgot which file it is, or deleted it, then do it again!

In Main - Time, click on `Show hidden parameters` and for `Direction of the simulation`
select `backward` instead of `forward`. Now we need to adjust the time for `Beginning of the
simulation` to make it correspond to the end of the simulation performed forward in time, i.e.
`year 01 month 05 day 18`.

Save, run the simulation and then plot the trajectories using the same script as before. Note
that the trajectories are perfectly back-simulated (compare @fig-back with @fig-drift) except for
a few of them which are missing (because the individuals were `dead` at the end of the
simulation forward in time, for reaching the border of the domain).

![Trajectories `backtracked` in Ichthyop and plotted in R.](img/back.png){#fig-back width=230px}